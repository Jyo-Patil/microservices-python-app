
name: build & deploy

on:
  push:
    branches:
      - "develop"
      - "main"
      - "master"
  pull_request:
    branches:
      - "develop"
      - "main"
      - "master"
  workflow_dispatch:

jobs:
  terraform_container_registry:
    name: Terraform Sample Project Deployment
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    defaults:
      run:
        working-directory: create_cluster
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false
      - name: Terraform Init
        run: |
          terraform init --backend-config="access_key=${{env.AWS_ACCESS_KEY_ID}}" --backend-config="secret_key=${{env.AWS_SECRET_ACCESS_KEY}}"
      - name: Terraform plan
        run: |
          terraform plan
      - name: Terraform Apply
        run: |
          terraform apply -auto-approve
      - name: Get Outputs
        run: |
          terraform output -json > tf-all-output.json
      - name: Checkout
        uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Set the cluster context
        id: login-eks
        run:
          aws eks update-kubeconfig --name demo --region us-east-1  
      - name: Install mongoDB helm charts
        id: login-mongo
        run: |
            cd ..
            cd Helm_charts/MongoDB
            helm uninstall mongo
            helm install mongo .
      - name: connect to mongodb instance
        id: mongo-connection
        run:
         mongosh mongodb://nasi:nasi1234@<3.80.245.189>:30005/mp3s?authSource=admin
      - name: Install postgres helm charts
        id: login-postgres
        run: |
         cd ..
         cd Postgres
         helm install postgres .
      - name: Install PostgreSQL client
        run: sudo apt-get install -y postgresql-client
      - name: Connect to Postgres instance
        id: connect-postgres
        run: |
          # Define your connection string
          export PGPASSWORD='cnd2023'
          
          # Execute the init.sql script
          psql 'postgres://nasi:cnd2023@<3.80.245.189>:30003/authdb' -f ./init.sql
      - name: deploy rabbitmq
        id: rabbitmq-srv
        run: |
          cd ..
          cd RabbitMQ
          helm install rabbitmq .
      - name: Auth service
        id: auth-srv
        run:  |
           cd ..
           cd src
           cd auth-service/manifest
           kubectl apply -f .
      - name: Gatway service
        id: gatway-srv
        run: |
            cd ..
            cd src
            cd gateway-service/manifest
            kubectl apply -f .     
      - name: Converter service
        id: converter-srv
        run: | 
            cd ..
            cd src
            cd converter-service/manifest
            kubectl apply -f .  
      - name: notification-service
        id: notification
        run: |
             cd ..
             cd src
             cd notification-service/manifest
             kubectl apply -f . 
